version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: autoya-backend:ci
    container_name: autoya-backend
    ports:
      - "8080:8080"
    env_file:
      - .env.dev
    depends_on:
      - postgres
      - redis
      - minio

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: autoya-frontend:ci
    container_name: autoya-frontend
    ports:
      - "8082:80"
    env_file:
      - .env.dev
    depends_on:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres-dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  # ðŸ‘‡ Servicio para configurar polÃ­tica pÃºblica automÃ¡ticamente
  minio-setup:
    image: quay.io/minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p myminio/autoya-dev || true &&
      mc anonymous set download myminio/autoya-dev &&
      echo 'âœ… Bucket autoya-dev pÃºblico listo.'
      "

volumes:
  postgres_data:
  redis_data:
  minio_data:
