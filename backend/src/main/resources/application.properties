spring.application.name=back-AutoYa

# ===============================
# SPRING BOOT CONFIGURATION
# ===============================

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/autoya
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ===============================
# DATABASE CONFIGURATION (PostgreSQL)
# ===============================
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:autoya_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:1234}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate/JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.use_sql_comments=true

# ===============================
# MINIO CONFIGURATION
# ===============================
minio.url=${MINIO_ENDPOINT:http://minio:9000}
minio.access-key=${MINIO_ROOT_USER:minioadmin}
minio.secret-key=${MINIO_ROOT_PASSWORD:minioadmin}
minio.bucket=${MINIO_BUCKET:autoya}
# minio.public-url=${MINIO_PUBLIC_URL:http://minio:9000}
minio.region=${MINIO_REGION:us-east-1}
minio.secure=${MINIO_SECURE:false}

# ===============================
# REDIS CONFIGURATION (disabled by default)
# ===============================
spring.data.redis.repositories.enabled=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
# If later enabling redis, use:
# spring.redis.host=${REDIS_HOST:redis}
# spring.redis.port=${REDIS_PORT:6379}

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.com.autoya=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Prefer stdout in containers; uncomment if you want file logging and mount a volume
# logging.file.name=logs/autoya-app.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===============================
# SECURITY CONFIGURATION (Basic/JWT)
# ===============================
jwt.secret=${JWT_SECRET:7h!sIs@Larg3AndS3cur3KeyForJWT2025!!}
jwt.expiration=${JWT_EXPIRATION:86400000} # 24 horas por defecto

# CORS
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200,http://localhost:8082}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# ===============================
# APPLICATION SPECIFIC CONFIGURATION
# ===============================
app.reservation.max-days=${APP_RESERVATION_MAX_DAYS:30}
app.reservation.min-hours-notice=${APP_RESERVATION_MIN_HOURS_NOTICE:2}
app.reservation.cancellation-hours=${APP_RESERVATION_CANCELLATION_HOURS:24}

app.payment.mock-enabled=${APP_PAYMENT_MOCK_ENABLED:true}
app.payment.currency=${APP_PAYMENT_CURRENCY:COP}
app.payment.tax-rate=${APP_PAYMENT_TAX_RATE:0.19}

app.notification.email-enabled=${APP_NOTIFICATION_EMAIL_ENABLED:true}
app.notification.sms-enabled=${APP_NOTIFICATION_SMS_ENABLED:false}
app.notification.push-enabled=${APP_NOTIFICATION_PUSH_ENABLED:false}

# ===============================
# PROFILES CONFIGURATION
# ===============================
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# ===============================
# SWAGGER/OPENAPI CONFIGURATION
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha

# ===============================
# PERFORMANCE CONFIGURATION
# ===============================
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_MIN_IDLE:2}
spring.datasource.hikari.idle-timeout=${SPRING_DATASOURCE_IDLE_TIMEOUT:30000}
spring.datasource.hikari.connection-timeout=${SPRING_DATASOURCE_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.max-lifetime=${SPRING_DATASOURCE_MAX_LIFETIME:120000}

spring.web.client.connection-timeout=${SPRING_WEB_CLIENT_CONNECTION_TIMEOUT:5000}
spring.web.client.read-timeout=${SPRING_WEB_CLIENT_READ_TIMEOUT:10000}

# ===============================
# INTERNATIONALIZATION
# ===============================
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.web.locale=es
spring.web.locale-resolver=fixed

# SMTP placeholders for sending receipts (configure for your environment)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=camilo2004jhonatan@gmail.com
spring.mail.password=rvfrxvpmlzphuect
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
